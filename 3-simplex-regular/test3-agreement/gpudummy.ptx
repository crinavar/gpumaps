//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_35
.address_size 64

	// .weak	cudaMalloc
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[29] = {100, 97, 116, 97, 91, 37, 105, 93, 32, 61, 32, 40, 37, 102, 44, 32, 37, 102, 44, 32, 37, 102, 44, 32, 37, 102, 41, 10, 0};

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z13carmack_sqrtff
.visible .func  (.param .b32 func_retval0) _Z13carmack_sqrtff(
	.param .b32 _Z13carmack_sqrtff_param_0
)
{
	.reg .f32 	%f<18>;
	.reg .b32 	%r<5>;


	ld.param.f32 	%f1, [_Z13carmack_sqrtff_param_0];
	mul.f32 	%f2, %f1, 0f3F000000;
	mov.b32 	 %r1, %f1;
	shr.u32 	%r2, %r1, 1;
	mov.u32 	%r3, 1597463174;
	sub.s32 	%r4, %r3, %r2;
	mov.b32 	 %f3, %r4;
	mul.f32 	%f4, %f2, %f3;
	mul.f32 	%f5, %f3, %f4;
	mov.f32 	%f6, 0f3FC00000;
	sub.f32 	%f7, %f6, %f5;
	mul.f32 	%f8, %f3, %f7;
	mul.f32 	%f9, %f2, %f8;
	mul.f32 	%f10, %f8, %f9;
	sub.f32 	%f11, %f6, %f10;
	mul.f32 	%f12, %f8, %f11;
	mul.f32 	%f13, %f2, %f12;
	mul.f32 	%f14, %f12, %f13;
	sub.f32 	%f15, %f6, %f14;
	mul.f32 	%f16, %f12, %f15;
	mul.f32 	%f17, %f16, %f1;
	st.param.f32	[func_retval0+0], %f17;
	ret;
}

	// .globl	_Z6k_testP6float4i
.visible .entry _Z6k_testP6float4i(
	.param .u64 _Z6k_testP6float4i_param_0,
	.param .u32 _Z6k_testP6float4i_param_1
)
{
	.local .align 8 .b8 	__local_depot7[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<10>;


	mov.u64 	%rd9, __local_depot7;
	cvta.local.u64 	%SP, %rd9;
	ld.param.u64 	%rd1, [_Z6k_testP6float4i_param_0];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd3, %r4, 16;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.v4.f32 	{%f1, %f2, %f3, %f4}, [%rd4];
	cvt.f64.f32	%fd1, %f1;
	cvt.f64.f32	%fd2, %f2;
	cvt.f64.f32	%fd3, %f3;
	cvt.f64.f32	%fd4, %f4;
	add.u64 	%rd5, %SP, 0;
	cvta.to.local.u64 	%rd6, %rd5;
	st.local.u32 	[%rd6], %r4;
	st.local.f64 	[%rd6+8], %fd1;
	st.local.f64 	[%rd6+16], %fd2;
	st.local.f64 	[%rd6+24], %fd3;
	st.local.f64 	[%rd6+32], %fd4;
	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 0
	ret;
}

	// .globl	_Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT_
.visible .entry _Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT_(
	.param .u64 _Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT__param_0,
	.param .u64 _Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT__param_1,
	.param .f32 _Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT__param_2,
	.param .align 1 .b8 _Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT__param_3[1]
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [_Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT__param_0];
	ld.param.u64 	%rd3, [_Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT__param_1];
	ld.param.f32 	%f1, [_Z12k_setoutdataIZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy1_EvPfmfT__param_2];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	cvt.u64.u32	%rd1, %r4;
	setp.ge.u64	%p1, %rd1, %rd3;
	@%p1 bra 	BB8_2;

	cvta.to.global.u64 	%rd4, %rd2;
	shl.b64 	%rd5, %rd1, 2;
	add.s64 	%rd6, %rd4, %rd5;
	st.global.f32 	[%rd6], %f1;

BB8_2:
	ret;
}

	// .globl	_Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i
.visible .entry _Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i(
	.param .u64 _Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_0,
	.param .u64 _Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_1,
	.param .u64 _Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_2,
	.param .u64 _Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_3,
	.param .align 1 .b8 _Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_4[1],
	.param .u32 _Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_5
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd2, [_Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_1];
	ld.param.u32 	%r3, [_Z7kernel1IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy2_EvPfS1_mmT_i_param_5];
	setp.lt.s32	%p1, %r3, 1;
	@%p1 bra 	BB9_3;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r6, %r5, %r7;
	cvt.rn.f32.u32	%f1, %r8;
	mov.u32 	%r9, %ctaid.z;
	mov.u32 	%r10, %ctaid.y;
	setp.gt.u32	%p2, %r10, %r9;
	setp.gt.u32	%p3, %r5, %r10;
	or.pred  	%p4, %p3, %p2;
	setp.ne.s32	%p5, %r3, 0;
	or.pred  	%p6, %p4, %p5;
	mov.u32 	%r11, 0;
	@%p6 bra 	BB9_3;

BB9_2:
	st.global.f32 	[%rd1], %f1;
	add.s32 	%r11, %r11, 1;
	setp.ne.s32	%p7, %r11, 0;
	@%p7 bra 	BB9_2;

BB9_3:
	ret;
}

	// .globl	_Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i
.visible .entry _Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i(
	.param .u64 _Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_0,
	.param .u64 _Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_1,
	.param .u64 _Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_2,
	.param .u64 _Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_3,
	.param .align 1 .b8 _Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_4[1],
	.param .u32 _Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_5
)
{
	.reg .pred 	%p<28>;
	.reg .f32 	%f<116>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [_Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_1];
	ld.param.u32 	%r20, [_Z7kernel2IZ8gpudummymijiEUnvdl0_PFdmijiE8gpudummy3_EvPfS1_mmT_i_param_5];
	setp.lt.s32	%p2, %r20, 1;
	@%p2 bra 	BB10_20;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %nctaid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %ctaid.y;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	mov.u32 	%r26, %nctaid.x;
	mad.lo.s32 	%r1, %r25, %r26, %r21;
	mov.u32 	%r5, %tid.x;
	cvt.rn.f32.u32	%f19, %r1;
	mul.f32 	%f1, %f19, 0f41D80000;
	fma.rn.f32 	%f2, %f1, %f1, 0fC0400000;
	mov.u32 	%r8, %ntid.x;
	neg.s32 	%r49, %r20;
	sqrt.rn.f32 	%f24, %f2;
	add.f32 	%f3, %f1, %f24;

BB10_2:
	setp.eq.s32	%p3, %r1, 0;
	mov.u32 	%r50, %r5;
	@%p3 bra 	BB10_17;

	mov.f32 	%f25, 0f3E2AAAAB;
	cvt.rzi.f32.f32	%f26, %f25;
	fma.rn.f32 	%f27, %f26, 0fC0000000, 0f3EAAAAAB;
	abs.f32 	%f4, %f27;
	abs.f32 	%f5, %f3;
	setp.lt.f32	%p4, %f5, 0f00800000;
	mul.f32 	%f28, %f5, 0f4B800000;
	selp.f32	%f29, 0fC3170000, 0fC2FE0000, %p4;
	selp.f32	%f30, %f28, %f5, %p4;
	mov.b32 	 %r27, %f30;
	and.b32  	%r28, %r27, 8388607;
	or.b32  	%r29, %r28, 1065353216;
	mov.b32 	 %f31, %r29;
	shr.u32 	%r30, %r27, 23;
	cvt.rn.f32.u32	%f32, %r30;
	add.f32 	%f33, %f29, %f32;
	setp.gt.f32	%p5, %f31, 0f3FB504F3;
	mul.f32 	%f34, %f31, 0f3F000000;
	add.f32 	%f35, %f33, 0f3F800000;
	selp.f32	%f36, %f34, %f31, %p5;
	selp.f32	%f37, %f35, %f33, %p5;
	add.f32 	%f38, %f36, 0fBF800000;
	add.f32 	%f21, %f36, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f20,%f21;
	// inline asm
	add.f32 	%f39, %f38, %f38;
	mul.f32 	%f40, %f20, %f39;
	mul.f32 	%f41, %f40, %f40;
	mov.f32 	%f42, 0f3C4CAF63;
	mov.f32 	%f43, 0f3B18F0FE;
	fma.rn.f32 	%f44, %f43, %f41, %f42;
	mov.f32 	%f45, 0f3DAAAABD;
	fma.rn.f32 	%f46, %f44, %f41, %f45;
	mul.rn.f32 	%f47, %f46, %f41;
	mul.rn.f32 	%f48, %f47, %f40;
	sub.f32 	%f49, %f38, %f40;
	neg.f32 	%f50, %f40;
	add.f32 	%f51, %f49, %f49;
	fma.rn.f32 	%f52, %f50, %f38, %f51;
	mul.rn.f32 	%f53, %f20, %f52;
	add.f32 	%f54, %f48, %f40;
	sub.f32 	%f55, %f40, %f54;
	add.f32 	%f56, %f48, %f55;
	add.f32 	%f57, %f53, %f56;
	add.f32 	%f58, %f54, %f57;
	sub.f32 	%f59, %f54, %f58;
	add.f32 	%f60, %f57, %f59;
	mov.f32 	%f61, 0f3F317200;
	mul.rn.f32 	%f62, %f37, %f61;
	mov.f32 	%f63, 0f35BFBE8E;
	mul.rn.f32 	%f64, %f37, %f63;
	add.f32 	%f65, %f62, %f58;
	sub.f32 	%f66, %f62, %f65;
	add.f32 	%f67, %f58, %f66;
	add.f32 	%f68, %f60, %f67;
	add.f32 	%f69, %f64, %f68;
	add.f32 	%f70, %f65, %f69;
	sub.f32 	%f71, %f65, %f70;
	add.f32 	%f72, %f69, %f71;
	mov.f32 	%f73, 0f3EAAAAAB;
	abs.f32 	%f6, %f73;
	setp.gt.f32	%p6, %f6, 0f77F684DF;
	selp.f32	%f74, 0f382AAAAB, 0f3EAAAAAB, %p6;
	mul.rn.f32 	%f75, %f74, %f70;
	neg.f32 	%f76, %f75;
	fma.rn.f32 	%f77, %f74, %f70, %f76;
	fma.rn.f32 	%f78, %f74, %f72, %f77;
	mov.f32 	%f79, 0f00000000;
	fma.rn.f32 	%f80, %f79, %f70, %f78;
	add.rn.f32 	%f81, %f75, %f80;
	neg.f32 	%f82, %f81;
	add.rn.f32 	%f83, %f75, %f82;
	add.rn.f32 	%f84, %f83, %f80;
	mov.b32 	 %r31, %f81;
	setp.eq.s32	%p7, %r31, 1118925336;
	add.s32 	%r32, %r31, -1;
	mov.b32 	 %f85, %r32;
	add.f32 	%f86, %f84, 0f37000000;
	selp.f32	%f87, %f85, %f81, %p7;
	selp.f32	%f7, %f86, %f84, %p7;
	mul.f32 	%f88, %f87, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f89, %f88;
	mov.f32 	%f90, 0fBF317200;
	fma.rn.f32 	%f91, %f89, %f90, %f87;
	mov.f32 	%f92, 0fB5BFBE8E;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mul.f32 	%f23, %f93, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f94, %f89, 0f00000000;
	ex2.approx.f32 	%f95, %f94;
	mul.f32 	%f96, %f22, %f95;
	setp.lt.f32	%p8, %f87, 0fC2D20000;
	selp.f32	%f97, 0f00000000, %f96, %p8;
	setp.gt.f32	%p9, %f87, 0f42D20000;
	selp.f32	%f114, 0f7F800000, %f97, %p9;
	setp.eq.f32	%p10, %f114, 0f7F800000;
	@%p10 bra 	BB10_5;

	fma.rn.f32 	%f114, %f114, %f7, %f114;

BB10_5:
	setp.lt.f32	%p11, %f3, 0f00000000;
	setp.eq.f32	%p12, %f4, 0f3F800000;
	and.pred  	%p1, %p11, %p12;
	mov.b32 	 %r33, %f114;
	xor.b32  	%r34, %r33, -2147483648;
	mov.b32 	 %f98, %r34;
	selp.f32	%f115, %f98, %f114, %p1;
	setp.eq.f32	%p13, %f3, 0f00000000;
	@%p13 bra 	BB10_8;
	bra.uni 	BB10_6;

BB10_8:
	add.f32 	%f101, %f3, %f3;
	selp.f32	%f115, %f101, 0f00000000, %p12;
	bra.uni 	BB10_9;

BB10_6:
	setp.geu.f32	%p14, %f3, 0f00000000;
	@%p14 bra 	BB10_9;

	cvt.rzi.f32.f32	%f100, %f73;
	setp.neu.f32	%p15, %f100, 0f3EAAAAAB;
	selp.f32	%f115, 0f7FFFFFFF, %f115, %p15;

BB10_9:
	add.f32 	%f102, %f5, %f6;
	mov.b32 	 %r35, %f102;
	setp.lt.s32	%p17, %r35, 2139095040;
	@%p17 bra 	BB10_16;

	setp.gtu.f32	%p18, %f5, 0f7F800000;
	setp.gtu.f32	%p19, %f6, 0f7F800000;
	or.pred  	%p20, %p18, %p19;
	@%p20 bra 	BB10_15;
	bra.uni 	BB10_11;

BB10_15:
	add.f32 	%f115, %f3, 0f3EAAAAAB;
	bra.uni 	BB10_16;

BB10_11:
	setp.eq.f32	%p21, %f6, 0f7F800000;
	@%p21 bra 	BB10_14;
	bra.uni 	BB10_12;

BB10_14:
	setp.gt.f32	%p23, %f5, 0f3F800000;
	selp.f32	%f103, 0f7F800000, 0f00000000, %p23;
	setp.eq.f32	%p24, %f3, 0fBF800000;
	selp.f32	%f115, 0f3F800000, %f103, %p24;
	bra.uni 	BB10_16;

BB10_12:
	setp.neu.f32	%p22, %f5, 0f7F800000;
	@%p22 bra 	BB10_16;

	selp.f32	%f115, 0fFF800000, 0f7F800000, %p1;

BB10_16:
	setp.eq.f32	%p25, %f3, 0f3F800000;
	selp.f32	%f104, 0f3F800000, %f115, %p25;
	mov.f32 	%f105, 0f3F318020;
	div.rn.f32 	%f106, %f105, %f104;
	fma.rn.f32 	%f107, %f104, 0f3EF624D8, %f106;
	add.f32 	%f108, %f107, 0fBF800000;
	cvt.rzi.u32.f32	%r36, %f108;
	add.s32 	%r37, %r36, 1;
	mul.lo.s32 	%r38, %r37, %r36;
	add.s32 	%r39, %r36, 2;
	mul.lo.s32 	%r40, %r38, %r39;
	mul.wide.u32 	%rd3, %r40, -1431655765;
	shr.u64 	%rd4, %rd3, 34;
	cvt.u32.u64	%r41, %rd4;
	sub.s32 	%r42, %r1, %r41;
	shl.b32 	%r43, %r42, 1;
	cvt.rn.f32.u32	%f109, %r43;
	add.f32 	%f110, %f109, 0f3E800000;
	sqrt.rn.f32 	%f111, %f110;
	add.f32 	%f112, %f111, 0fBF000000;
	cvt.rzi.u32.f32	%r44, %f112;
	add.s32 	%r45, %r44, 1;
	mul.lo.s32 	%r46, %r45, %r44;
	shr.u32 	%r47, %r46, 1;
	sub.s32 	%r48, %r42, %r47;
	mad.lo.s32 	%r13, %r48, %r8, %r5;
	mov.u32 	%r50, %r13;

BB10_17:
	mov.u32 	%r16, %r50;
	setp.ne.s32	%p26, %r20, 0;
	@%p26 bra 	BB10_19;

	cvt.rn.f32.u32	%f113, %r16;
	st.global.f32 	[%rd1], %f113;

BB10_19:
	add.s32 	%r49, %r49, 1;
	setp.ne.s32	%p27, %r49, 0;
	@%p27 bra 	BB10_2;

BB10_20:
	ret;
}


